<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bms.finance.persistence.PaymentMapper">
	
	<insert id="insertPayment" parameterType="Payment" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO b_Payment
		(title, money, invoice_need, invoice_title, pay_type, dst_card_num, 
		dst_bank_name, dst_account_name, urgency, apply_time, 
		applicant_id, department_id, applicant_comment, 
		invoice_state, state, last_modify_time, last_modify_person)
		VALUES
		(#{title}, #{money}, #{invoice_need}, #{invoice_title}, #{pay_type}, #{dst_card_num}, 
		#{dst_bank_name}, #{dst_account_name}, #{urgency}, #{apply_time}, 
		#{applicant_id}, #{department_id}, #{applicant_comment}, 
		#{invoice_state}, #{state}, #{last_modify_time}, #{last_modify_person})
	</insert>
	
	<update id="updatePayment" parameterType="Payment">
		UPDATE b_Payment
			<set>
				<if test="title!=null">title = #{title},</if>
				<if test="money!=null">money = #{money},</if>
				<if test="invoice_need!=null">invoice_need = #{invoice_need},</if>
				<if test="invoice_title!=null">invoice_title = #{invoice_title},</if>
				<if test="pay_type!=null">pay_type = #{pay_type},</if>
				<if test="src_account!=null">src_account = #{src_account},</if>
				<if test="dst_card_num!=null">dst_card_num = #{dst_card_num},</if>
				<if test="dst_bank_name!=null">dst_bank_name = #{dst_bank_name},</if>
				<if test="dst_account_name!=null">dst_account_name = #{dst_account_name},</if>
				<if test="urgency!=null">urgency = #{urgency},</if>
				<if test="apply_time!=null">apply_time = #{apply_time},</if>
				<if test="audit_time!=null">audit_time = #{audit_time},</if>
				<if test="accountant_pay_time!=null">accountant_pay_time = #{accountant_pay_time},</if>
				<if test="teller_pay_time!=null">teller_pay_time = #{teller_pay_time},</if>
				<if test="invoice_time!=null">invoice_time = #{invoice_time},</if>
				<if test="applicant_id!=null">applicant_id = #{applicant_id},</if>
				<if test="teller_id!=null">teller_id = #{teller_id},</if>
				<if test="manager_id!=null">manager_id = #{manager_id},</if>
				<if test="accountant_id!=null">accountant_id = #{accountant_id},</if>
				<if test="department_id!=null">department_id = #{department_id},</if>
				<if test="applicant_comment!=null">applicant_comment = #{applicant_comment},</if>
				<if test="teller_comment!=null">teller_comment = #{teller_comment},</if>
				<if test="manager_comment!=null">manager_comment = #{manager_comment},</if>
				<if test="accountant_comment!=null">accountant_comment = #{accountant_comment},</if>
				<if test="invoice_state!=null">invoice_state = #{invoice_state},</if>
				<if test="state!=null">state = #{state},</if>
				<if test="last_modify_time!=null">last_modify_time = #{last_modify_time},</if>
				<if test="last_modify_person!=null">last_modify_person = #{last_modify_person}</if>
			</set>
		WHERE id = #{id}
	</update>
	
	<update id="updatePayments" parameterType="java.util.Map">
		UPDATE b_Payment SET
			state = #{state},
			audit_time = #{audit_time},
			manager_id = #{manager_id},
			last_modify_person = #{last_modify_person},
			last_modify_time = #{last_modify_time}
		WHERE id IN
		<foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>
	
	<delete id="deletePayment" parameterType="Integer">
		DELETE FROM b_Payment WHERE id = #{id}	
	</delete>
	
	<select id="queryPayment" parameterType="java.util.Map" resultType="Payment">
		SELECT * FROM b_Payment WHERE id = #{id}
	</select>
	
	<select id="getMyApplyList" parameterType="java.util.Map" resultType="Payment">
		SELECT * FROM b_Payment 
		WHERE 
		applicant_id = #{applicant_id}
		<if test="id != null">
			AND id = #{id}
		</if>
		<if test="title != null">
			AND title LIKE '%${title}%'
		</if>
		<if test="urgency != null">
			AND urgency = #{urgency}
		</if>
		<if test="pay_type != null">
			AND pay_type = #{pay_type}
		</if>
		<if test="invoice_need != null">
			AND invoice_need = #{invoice_need}
		</if>
		<if	test="state != null">
			AND state = #{state}
		</if>
		<if	test="invoice_state != null">
			AND invoice_state = #{invoice_state}
		</if>
		<if test="sort == null">
			ORDER BY apply_time DESC
		</if>
		<if test="sort != null and order == 'asc'">
			ORDER BY ${sort} 
		</if>
		<if test="sort != null and order == 'desc'">
			ORDER BY ${sort} DESC
		</if>
		<if test="startIndex != null and currentItemCount != null">
			LIMIT #{startIndex}, #{currentItemCount}
		</if>
	</select>
	
	<select id="getAuditList" parameterType="java.util.Map" resultType="Payment">
		SELECT * FROM b_Payment 
		WHERE 
		state = 'new'
		AND 
		department_id IN
		<foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
		<if test="id != null">
			AND id = #{id}
		</if>
		<if test="title != null">
			AND title LIKE '%${title}%'
		</if>
		<if	test="department_id != null">
			AND department_id = #{department_id}
		</if>
		<if test="urgency != null">
			AND urgency = #{urgency}
		</if>
		<if test="pay_type != null">
			AND pay_type = #{pay_type}
		</if>
		<if test="invoice_need != null">
			AND invoice_need = #{invoice_need}
		</if>
		<if test="sort == null">
			ORDER BY apply_time
		</if>
		<if test="sort != null and order == 'asc'">
			ORDER BY ${sort}
		</if>
		<if test="sort != null and order == 'desc'">
			ORDER BY ${sort} DESC
		</if>
		<if test="startIndex != null and currentItemCount != null">
			LIMIT #{startIndex}, #{currentItemCount}
		</if>
	</select>
	
	<select id="getAccountantPayList" parameterType="java.util.Map" resultType="Payment">
		SELECT * FROM b_Payment 
		WHERE 
		state = 'agreed'
		AND 
		department_id IN
		<foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
		<if test="id != null">
			AND id = #{id}
		</if>
		<if test="title != null">
			AND title LIKE '%${title}%'
		</if>
		<if	test="department_id != null">
			AND department_id = #{department_id}
		</if>
		<if test="urgency != null">
			AND urgency = #{urgency}
		</if>
		<if test="pay_type != null">
			AND pay_type = #{pay_type}
		</if>
		<if test="invoice_need != null">
			AND invoice_need = #{invoice_need}
		</if>
		<if test="sort == null">
			ORDER BY apply_time
		</if>
		<if test="sort != null and order == 'asc'">
			ORDER BY ${sort}
		</if>
		<if test="sort != null and order == 'desc'">
			ORDER BY ${sort} desc
		</if>
		<if test="startIndex != null and currentItemCount != null">
			LIMIT #{startIndex}, #{currentItemCount}
		</if>
	</select>
	
	<select id="getAccountantInvoiceList" parameterType="java.util.Map" resultType="Payment">
		SELECT * FROM b_Payment 
		WHERE 
		(state = 'accountant_payed' AND pay_type = 'transfer')
		OR
		state = 'teller_payed'
		AND
		invoice_need = '1'
		AND 
		invoice_state != 'closed'
		AND 
		department_id IN
		<foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
		<if test="id != null">
			AND id = #{id}
		</if>
		<if test="title != null">
			AND title LIKE '%${title}%'
		</if>
		<if	test="department_id != null">
			AND department_id = #{department_id}
		</if>
		<if test="pay_type != null">
			AND pay_type = #{pay_type}
		</if>
		<if test="invoice_title != null">
			AND invoice_title LIKE '%${invoice_title}%'
		</if>
		<if test="sort == null">
			ORDER BY apply_time
		</if>
		<if test="sort != null and order == 'asc'">
			ORDER BY ${sort}
		</if>
		<if test="sort != null and order == 'desc'">
			ORDER BY ${sort} desc
		</if>
		<if test="startIndex != null and currentItemCount != null">
			LIMIT #{startIndex}, #{currentItemCount}
		</if>
	</select>
	
	<select id="getTellerPayList" parameterType="java.util.Map" resultType="Payment">
		SELECT * FROM b_Payment 
		WHERE 
		state = 'accountant_payed'
		AND 
		pay_type = 'cash'
		AND 
		department_id IN
		<foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
		<if test="id != null">
			AND id = #{id}
		</if>
		<if test="title != null">
			AND title LIKE '%${title}%'
		</if>
		<if	test="department_id != null">
			AND department_id = #{department_id}
		</if>
		<if test="urgency != null">
			AND urgency = #{urgency}
		</if>
		<if test="sort == null">
			ORDER BY apply_time
		</if>
		<if test="sort != null and order == 'asc'">
			ORDER BY ${sort}
		</if>
		<if test="sort != null and order == 'desc'">
			ORDER BY ${sort} desc
		</if>
		<if test="startIndex != null and currentItemCount != null">
			LIMIT #{startIndex}, #{currentItemCount}
		</if>
	</select>
	
	<select id="getAll" parameterType="java.util.Map" resultType="Payment">
		SELECT * FROM b_Payment
		<where>
			<if test="id != null">
				id = #{id}
			</if>
			<if test="department_id != null">
				AND department_id = #{department_id}
			</if>
			<if test="title != null">
				AND title LIKE '%${title}%'
			</if>
			<if test="urgency != null">
				AND urgency = #{urgency}
			</if>
			<if test="pay_type != null">
				AND pay_type = #{pay_type}
			</if>
			<if test="invoice_need != null">
				AND invoice_need = #{invoice_need}
			</if>
			<if	test="state != null">
				AND state = #{state}
			</if>
			<if	test="invoice_state != null">
				AND invoice_state = #{invoice_state}
			</if>
		</where>
		<if test="sort == null">
			ORDER BY apply_time desc
		</if>
		<if test="sort != null and order == 'asc'">
			ORDER BY ${sort} 
		</if>
		<if test="sort != null and order == 'desc'">
			ORDER BY ${sort} desc
		</if>
		<if test="startIndex != null and currentItemCount != null">
			LIMIT #{startIndex}, #{currentItemCount}
		</if>
	</select>
	
		
	<select id="getMyApplyCount" parameterType="java.util.Map" resultType="Integer">
		SELECT COUNT(*) FROM b_Payment 
		WHERE 
		applicant_id = #{applicant_id}
		<if test="id != null">
			AND id = #{id}
		</if>
		<if test="title != null">
			AND title LIKE '%${title}%'
		</if>
		<if test="urgency != null">
			AND urgency = #{urgency}
		</if>
		<if test="pay_type != null">
			AND pay_type = #{pay_type}
		</if>
		<if test="invoice_need != null">
			AND invoice_need = #{invoice_need}
		</if>
		<if	test="state != null">
			AND state = #{state}
		</if>
		<if	test="invoice_state != null">
			AND invoice_state = #{invoice_state}
		</if>
	</select>
	
	<select id="getAuditCount" parameterType="java.util.Map" resultType="Integer">
		SELECT COUNT(*) FROM b_Payment 
		WHERE 
		state = 'new'
		AND 
		department_id IN
		<foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
		<if test="id != null">
			AND id = #{id}
		</if>
		<if test="title != null">
			AND title LIKE '%${title}%'
		</if>
		<if	test="department_id != null">
			AND department_id = #{department_id}
		</if>
		<if test="urgency != null">
			AND urgency = #{urgency}
		</if>
		<if test="pay_type != null">
			AND pay_type = #{pay_type}
		</if>
		<if test="invoice_need != null">
			AND invoice_need = #{invoice_need}
		</if>
	</select>
	
	<select id="getAccountantPayCount" parameterType="java.util.Map" resultType="Integer">
		SELECT COUNT(*) FROM b_Payment 
		WHERE 
		state = 'agreed'
		AND 
		department_id IN
		<foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
		<if test="id != null">
			AND id = #{id}
		</if>
		<if test="title != null">
			AND title LIKE '%${title}%'
		</if>
		<if	test="department_id != null">
			AND department_id = #{department_id}
		</if>
		<if test="urgency != null">
			AND urgency = #{urgency}
		</if>
		<if test="pay_type != null">
			AND pay_type = #{pay_type}
		</if>
		<if test="invoice_need != null">
			AND invoice_need = #{invoice_need}
		</if>
	</select>
	
	<select id="getAccountantInvoiceCount" parameterType="java.util.Map" resultType="Integer">
		SELECT COUNT(*) FROM b_Payment 
		WHERE 
		(state = 'accountant_payed' AND pay_type = 'transfer')
		OR
		state = 'teller_payed'
		AND
		invoice_need = '1'
		AND 
		invoice_state != 'closed'
		AND 
		department_id IN
		<foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
		<if test="id != null">
			AND id = #{id}
		</if>
		<if test="title != null">
			AND title LIKE '%${title}%'
		</if>
		<if	test="department_id != null">
			AND department_id = #{department_id}
		</if>
		<if test="pay_type != null">
			AND pay_type = #{pay_type}
		</if>
		<if test="invoice_title != null">
			AND invoice_title LIKE '%#{invoice_title}%'
		</if>
	</select>
	
	<select id="getTellerPayCount" parameterType="java.util.Map" resultType="Integer">
		SELECT COUNT(*) FROM b_Payment 
		WHERE 
		state = 'accountant_payed'
		AND 
		pay_type = 'cash'
		AND 
		department_id IN
		<foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
		<if test="id != null">
			AND id = #{id}
		</if>
		<if test="title != null">
			AND title LIKE '%${title}%'
		</if>
		<if	test="department_id != null">
			AND department_id = #{department_id}
		</if>
		<if test="urgency != null">
			AND urgency = #{urgency}
		</if>
	</select>
	
	<select id="getAllCount" parameterType="java.util.Map" resultType="Integer">
		SELECT COUNT(*) FROM b_Payment
		<where>
			<if test="id != null">
				id = #{id}
			</if>
			<if test="department_id != null">
				AND department_id = #{department_id}
			</if>
			<if test="title != null">
				AND title LIKE '%${title}%'
			</if>
			<if test="urgency != null">
				AND urgency = #{urgency}
			</if>
			<if test="pay_type != null">
				AND pay_type = #{pay_type}
			</if>
			<if test="invoice_need != null">
				AND invoice_need = #{invoice_need}
			</if>
			<if	test="state != null">
				AND state = #{state}
			</if>
			<if	test="invoice_state != null">
				AND invoice_state = #{invoice_state}
			</if>
		</where>
	</select>
	
	<select id="getMessageReceiver" parameterType="java.util.Map" resultType="Integer">
		SELECT DISTINCT a_AccountDepartment.account_id FROM a_AccountDepartment, 
		a_Account, a_Role, a_AccountRole 
			WHERE a_Account.account_id = a_AccountRole.account_id 
			AND
			a_AccountRole.role_id = a_Role.role_id
			AND
			a_AccountDepartment.account_id = a_Account.account_id
			AND
			role_name = #{role_name}
			AND 
			a_AccountDepartment.dep_id IN
			<foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
	</select>
	
	<select id="queryPaymentsByIds" parameterType="java.util.Map" resultType="Payment">
		SELECT * FROM b_Payment
			WHERE
			id IN
		<foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>	
	</select>
</mapper>